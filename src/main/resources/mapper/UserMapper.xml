<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.store.mapper.UserMapper">
<!--
        自定义映射规则：resultMap标签来完成映射规则的定义
        id属性：表示给映射规则分配一个唯一的id值，对应的就是resultMap =“id属性的值”属性的取值
        type属性：取值是一个类，表示的是数据库中的查询结果和java中的哪个实体类进行结果集的映射
-->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
<!--        将表的字段和类的属性不一致的字段进行匹配指定，名称一致的字段可以省略不写，但是主键不可以省略
            column是表的属性
            property是对象的属性
-->
        <id column="uid" property="uid"></id>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>

    </resultMap>

<!--    namespace属性：用于指定当前的映射文件和哪个接口进行映射，需要指定接口的文件路径-->
<!--    id属性：表示映射的接口中方法的名称，直接在标签的内容来编写sql语句-->
<!--    useGeneratedKeys属性：开启某个keyProperty字段的值递增（主键设置递增）-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user (
            username, password, salt, phone, gender,avatar, is_delete,
            created_user, created_time, modified_user, modified_time
        ) VALUES (
                     #{username},#{password}, #{salt}, #{phone}, #{gender}, #{avatar},#{isDelete},
                     #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime}
                 )
    </insert>

<!--    select语句在执行的时候，有两种情况：1.查询的是一个对象 2.查询的是多个对象
        resultType：表示查询的结果集类型，执行需要指定对应映射类的类型，并且包含完整包接口（当表的字段与类的对象属性名称一致时，可以直接用，否则需要映射规则）
        resultMap：标签当表的资源和类的对象属性的字段名称不一致时，来自定义查询结果集的映射规则

-->
    <select id="findByUsername" resultMap="UserEntityMap">
       SELECT * FROM t_user WHERE username = #{username}
    </select>
</mapper>

